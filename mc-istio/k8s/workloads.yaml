apiVersion: apps/v1
kind: Deployment
metadata: { name: api-aws, namespace: aws, labels: { app: api-aws, version: v1, cloud: aws } }
spec:
  replicas: 1
  selector: { matchLabels: { app: api-aws } }
  template:
    metadata: { labels: { app: api-aws, version: v1, cloud: aws } }
    spec:
      containers:
      - name: app
        image: nicholasjackson/fake-service:v0.26.2
        env:
        - { name: LISTEN_ADDR, value: "0.0.0.0:8080" }
        - { name: NAME,        value: "api-aws" }
        - { name: MESSAGE,     value: "hello from AWS" }
        ports: [ { containerPort: 8080 } ]
---
apiVersion: v1
kind: Service
metadata: { name: api-aws, namespace: aws, labels: { app: api-aws, cloud: aws } }
spec:
  selector: { app: api-aws }
  ports: [ { port: 8080, targetPort: 8080 } ]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: api-gcp, namespace: gcp, labels: { app: api-gcp, version: v1, cloud: gcp } }
spec:
  replicas: 1
  selector: { matchLabels: { app: api-gcp } }
  template:
    metadata: { labels: { app: api-gcp, version: v1, cloud: gcp } }
    spec:
      containers:
      - name: app
        image: nicholasjackson/fake-service:v0.26.2
        env:
        - { name: LISTEN_ADDR, value: "0.0.0.0:8080" }
        - { name: NAME,        value: "api-gcp" }
        - { name: MESSAGE,     value: "hello from GCP" }
        - { name: UPSTREAM_URIS, value: "http://api-aws.aws.svc.cluster.local:8080" }
        ports: [ { containerPort: 8080 } ]
---
apiVersion: v1
kind: Service
metadata: { name: api-gcp, namespace: gcp, labels: { app: api-gcp, cloud: gcp } }
spec:
  selector: { app: api-gcp }
  ports: [ { port: 8080, targetPort: 8080 } ]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: api-azure, namespace: azure, labels: { app: api-azure, version: v1, cloud: azure } }
spec:
  replicas: 1
  selector: { matchLabels: { app: api-azure } }
  template:
    metadata: { labels: { app: api-azure, version: v1, cloud: azure } }
    spec:
      containers:
      - name: app
        image: nicholasjackson/fake-service:v0.26.2
        env:
        - { name: LISTEN_ADDR, value: "0.0.0.0:8080" }
        - { name: NAME,        value: "api-azure" }
        - { name: MESSAGE,     value: "hello from AZURE" }
        - { name: UPSTREAM_URIS, value: "http://api-gcp.gcp.svc.cluster.local:8080" }
        ports: [ { containerPort: 8080 } ]
---
apiVersion: v1
kind: Service
metadata: { name: api-azure, namespace: azure, labels: { app: api-azure, cloud: azure } }
spec:
  selector: { app: api-azure }
  ports: [ { port: 8080, targetPort: 8080 } ]
